<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANwAAADcCAYAAAAbWs+BAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABRZSURBVHhe7d15kBxXfQfw5e8ESCB/BKpI4sq/KSpVKQIO7PT6iO2Y3GAnxFRCrsqN7QRjJ+TC
        wbENJBAb43AYMAkFOStAABMrUaSdmZWslWTrPmLLWq20K+309By7c/WMnPft7ZVne38z/bqn+03P6ttV
        nyq7dvrNaKa/3e+9fu/1lKntws6Z7ynnc7c6xZm7yoXcY8pTTjG3387nTtqF3Dn1/zZRWnCM4VjDMaf+
        /yl1LH7COxbVMbm444bX+ofp5G4vvTT1CrtgXVvOW39dLli7lVLwSyDKBu/Y3KV8yM7PvAXHrn8YZ39b
        yb/19eVi7j714Q+8/A8imhz+VfDeld3Tr/MP6+xtTuH671eX5wfVZftC8B9ANJGK1lIpn3u8Urj+B/3D
        fPybs3Pmu9QV7SPqA17a8oGJtgGnkLtYmp1+uPz0ja/2D/vxbOXCzC+iISp9SKLtxi5Yx9Xxfrt/+Jvb
        VDvtlaqe+1npQxFtf9YXjV3tnMLMD/uNSuGDEF0l8tb8xd3Tb/Rjkc7mFKetcj63IH4AoqsM7u2VZmdu
        9OOR7GbPWrc5BWtZemOiqxU6VNRF6A4/Jslslbnc7bxxTTSItYILkh+X0TZ12byJVzai4ZCRkauX6CCx
        C9ai9AZEtBnadLE7UtDtyd5IomicojVv73nzq/wY6W92PvcFqUAiGk7VCj/nx0hvwwgSqSAi0qM9IgVj
        Izlci2g0dt46oTUaxR+ILBZCRJE85MdK3pZ35a7xbuTJOxNRNJcqe3PX+PHautmF3MeFnYgoJnUB+6gf
        r83b+kxta0naiYhiuyDOHPeXRZB2IKJR5K17/Jitb1g0hTe5iVKSt+Y3LUxk78r9mPhCIkpEqWC9yY+b
        qk56S9nJLySi0dl5634/bhhZYs1KLyKihOStnV7YzhWvfQ3m84gvIqKEWCveCs9Y6ll+ARElqVqcuWXK
        mbPulv5IRMmyZ3N3ov32SemPRJSwfO5RDOf6tvhHIkpW3vrWFGaoin8kokTZeWsfZnZz7huRAVgqXVUp
        uUgQkQlYZAidJlxvksgIq6QCJ/2BiNLAwBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnE
        wBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnE
        wBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnE
        wBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGcTAERnEwBEZxMARGTTxgXOK19vO3reXy3M3l6W/
        E2XJRAXO2fcOZ+35v1ltLX2t5dYOu732Su9yd/XyFe7q5W7jbLdTzrebC082qod+t1ouXieWlQZn70+W
        6yf+ot668C/NTnlPp9c81+21Lq5/Rrd+Gf/trv5ft2PvbjfPPdmoHXlv1SneIJZ1NarM3+6snf7wauvC
        vzY7zp5Ot7HQ7bUvbfr+uqun3Hbpf9a/v6Pvq5WLPz5RJ9rMBw4H5NqpD9Xd6oEOArUpYBp6zcVu48W/
        X3P2/ERqP0z10O9U25f+q9Vzq+JnGKbbvNBrnP1co7L3pzNy4Fh2e2VHGwf3MK3zX2nI+0fj7Lm13Djz
        ybXu6glX+n5Cdcoqk99uVZ/9rapUftZkOnAIGq5Y4hcdEQ6StVMP1KX3iauy72fK7eVvtuKcCIJ6reXe
        2ukHE/18ceDglz5fUOvCvzWl/XXhRNpceGJtSy1lBKhVVPbfUZHeLysyGThn3887qHZJX+qo2hefajlz
        N4rvG0X12d+oJHUy6Nda+mpzXNVMXKl7Hb2r9CiBq+x/d8WtPhfvihZGXfFWTz20Kr1vFmQucJX973K6
        q88nfiD3QxtglIO6evA9FVwxpbKTgJOCybYnoP2p6t7a33vcwFUP/qr67pZT++42NF58fE16/3HLVOAq
        B36l0m0upf5jQNw2CNpaaBdKZSYJ1S3p/VOhwo2OJulzDBIncGhHp30yvUJV82vH3l+TPsc4ZSdwczeX
        u/WYDec43PplrxdT+ixDtFf+O5WqbhA6YKqHfttIR0Dj7Ke12m394gQOPYtSWWnprr3QTaL5kKTMBK5+
        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
        vkM8Lad64I7MTMcJYuB8cQIHqPrhqTS6S/RtoQ4SjMSIO7QpLakGboM6ueCeZZQV1yS4rYPjB0/oEd8n
        QzITOAyJWu/+HY84j5raRB08eKg/rlK4WT1sjht6zvAgSLQxMHtZLG/MMM5T+p6uUFVDab+4MEkUj+7C
        nEeMHR04B9FFZ+fzXcwKwYkOS1tEXRhqnDITuO0GBwFW0cKwLKz8hXtIlYPvqWShfTY5LG/GCL5HbxDB
        qCfFDGDgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgM
        YuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgM
        YuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgM
        YuCIDGLgiAxi4IgMYuCIDGLgiAxi4IgMYuCIDFKBs0rSH4goaVZpyi5Yi/IfiShJdiF3bsrO505KfySi
        ZKmL2/Epp2jNS38komTZeWsfOk2eCv6BiFJQtL6JwD225Q9ElALrEVWlnLlL/iMRJalUsN47Vc7nbpX+
        SETJqhZnbpk6V7z2NepStyK9gIiSYq0s7rjhtVPY1P/sll9ERInIWzu9sGFTgXtAfBERJcIuWh/04zY1
        Zedn3iK9iIiSUZm97kf8uE1NvfTS1Ct4A5woJXlrHhnz47a+qT/cu+WFRDQyu5h7nx+zl7eV/Ftfr/54
        IfhiIhrJhZXd06/zY7Z5U0n8mLADEcVVtD7sx2vrtrRz5gecQu6iuCMRReIUrOVy/m3f58dL3kqz0w9L
        OxNRVNYDfqwGb6ot90q7kDsmF0BEOjD3zd7z5lf5sRq+2fnc7VIhRKTHLky/w4+T3qYuh5+SCiKi4VQN
        8Qk/Rvrb8nM3fYfaca9UIBENkLfm0SzzYxRtu7h7+o3lfG5BLJiIgs6WCzM/5Mcn3uYUcjlVEG+IEw2B
        WwCVQu56PzajbfasdRvm80hvRETWSuROkrBNFfhO70ae+IZEV6mitZR42DY2v3qp6qnCGxNdZbCwa6k4
        fYMfj3S29Y4UTuWhq5sK2zMjd5Dobpd2znynql5+RvogRNtePvdk+ekbX+3HwdyGESkYwiJ+KKJtBkMe
        U2uv6W4YL6Y+zEOcZUDb1XpnofVA7BvaaWz2rtwb1KX2QXUWOC99aKKJU7SWSvnc45W9uWv8wzx7G2a3
        qrPB+9mxQpMKD91Qx+89q8/MfK9/WE/GVipO/6j68Pc7RWsnb5xTdqljM2/txFJ2pYL1Jv/wnewNKzxj
        qWd7Nnenqno+iieJYKUwFcgTuJ8hfxFECcnnFnCs+avTfUOF7BEcizgmK7Nv+27/ME15m5r6f/X/DCrD
        rswNAAAAAElFTkSuQmCC
</value>
  </data>
</root>